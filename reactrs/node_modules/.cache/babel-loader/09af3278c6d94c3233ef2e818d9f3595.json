{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  function unwant(_x) {\n    return _unwant.apply(this, arguments);\n  }\n\n  function _unwant() {\n    _unwant = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('bitswap/unwant', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.toString()\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _unwant.apply(this, arguments);\n  }\n\n  return unwant;\n});","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/ipfs-http-client/src/bitswap/unwant.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","unwant","cid","options","post","timeout","signal","searchParams","arg","toString","headers","res","json"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,MAJiB;AAAA;AAAA;;AAAA;AAAA,uEAIhC,iBAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BC,cAAAA,OAA5B,2DAAsC,EAAtC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OAD0B;AAE3CC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAF2B;AAG3CC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAEN,GAAG,CAACO,QAAJ;AADwB,mBAE1BN,OAF0B,EAHY;AAO3CO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAP0B,eAA3B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA,+CAWSA,GAAG,CAACC,IAAJ,EAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAiBhC,SAAOX,MAAP;AACD,CAlByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n"]},"metadata":{},"sourceType":"script"}