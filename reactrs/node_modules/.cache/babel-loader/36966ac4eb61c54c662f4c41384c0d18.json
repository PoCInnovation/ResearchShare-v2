{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/rm')>}\n   */\n  function rm(_x) {\n    return _rm.apply(this, arguments);\n  }\n\n  function _rm() {\n    _rm = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          removed,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (!Array.isArray(cid)) {\n                cid = [cid];\n              }\n\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('block/rm', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: cid.map(function (cid) {\n                    return new CID(cid).toString();\n                  }),\n                  'stream-channels': true\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 4:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 7;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 9:\n              _context.next = 11;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 11:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 15;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 15:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 23;\n                break;\n              }\n\n              removed = _value;\n              _context.next = 20;\n              return toCoreInterface(removed);\n\n            case 20:\n              _iteratorNormalCompletion = true;\n              _context.next = 9;\n              break;\n\n            case 23:\n              _context.next = 29;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 29:\n              _context.prev = 29;\n              _context.prev = 30;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 34;\n                break;\n              }\n\n              _context.next = 34;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 34:\n              _context.prev = 34;\n\n              if (!_didIteratorError) {\n                _context.next = 37;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 37:\n              return _context.finish(34);\n\n            case 38:\n              return _context.finish(29);\n\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 25, 29, 39], [30,, 34, 38]]);\n    }));\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n});\n\nfunction toCoreInterface(removed) {\n  var out = {\n    cid: new CID(removed.Hash)\n  };\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n\n  return out;\n}","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-http-client/src/block/rm.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","rm","cid","options","Array","isArray","post","timeout","signal","searchParams","arg","map","toString","headers","res","ndjson","removed","toCoreInterface","out","Hash","Error","error"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AACF;AACA;AAHkC,WAIfC,EAJe;AAAA;AAAA;;AAAA;AAAA,qEAIhC,iBAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA0BC,cAAAA,OAA1B,2DAAoC,EAApC;;AACE,kBAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;AACvBA,gBAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACD;;AAHH;AAAA,0CAKoBF,GAAG,CAACM,IAAJ,CAAS,UAAT,EAAqB;AACrCC,gBAAAA,OAAO,EAAEJ,OAAO,CAACI,OADoB;AAErCC,gBAAAA,MAAM,EAAEL,OAAO,CAACK,MAFqB;AAGrCC,gBAAAA,YAAY,EAAEZ,iBAAiB;AAC7Ba,kBAAAA,GAAG,EAAER,GAAG,CAACS,GAAJ,CAAQ,UAAAT,GAAG;AAAA,2BAAI,IAAIR,GAAJ,CAAQQ,GAAR,EAAaU,QAAb,EAAJ;AAAA,mBAAX,CADwB;AAE7B,qCAAmB;AAFU,mBAG1BT,OAH0B,EAHM;AAQrCU,gBAAAA,OAAO,EAAEV,OAAO,CAACU;AARoB,eAArB,CALpB;;AAAA;AAKQC,cAAAA,GALR;AAAA;AAAA;AAAA;AAAA,yCAgB8BA,GAAG,CAACC,MAAJ,EAhB9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAgBmBC,cAAAA,OAhBnB;AAAA;AAiBI,qBAAMC,eAAe,CAACD,OAAD,CAArB;;AAjBJ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAyBhC,SAAOf,EAAP;AACD,CA1ByB,CAA1B;;AA4BA,SAASgB,eAAT,CAA0BD,OAA1B,EAAmC;AACjC,MAAME,GAAG,GAAG;AACVhB,IAAAA,GAAG,EAAE,IAAIR,GAAJ,CAAQsB,OAAO,CAACG,IAAhB;AADK,GAAZ;;AAIA,MAAIH,OAAO,CAACI,KAAZ,EAAmB;AACjBF,IAAAA,GAAG,CAACG,KAAJ,GAAY,IAAID,KAAJ,CAAUJ,OAAO,CAACI,KAAlB,CAAZ;AACD;;AAED,SAAOF,GAAP;AACD","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/rm')>}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => new CID(cid).toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\nfunction toCoreInterface (removed) {\n  const out = {\n    cid: new CID(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}