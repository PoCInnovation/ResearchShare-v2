{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar SubscriptionTracker = require('./subscription-tracker');\n\nmodule.exports = function (api) {\n  var subsTracker = SubscriptionTracker.singleton(); // eslint-disable-next-line require-await\n\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic, handler) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", subsTracker.unsubscribe(topic, handler));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-http-client/src/pubsub/unsubscribe.js"],"names":["SubscriptionTracker","require","module","exports","api","subsTracker","singleton","topic","handler","unsubscribe"],"mappings":"AAAA;;;;;;AAEA,IAAMA,mBAAmB,GAAGC,OAAO,CAAC,wBAAD,CAAnC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACtB,MAAMC,WAAW,GAAGL,mBAAmB,CAACM,SAApB,EAApB,CADsB,CAEtB;;AACA;AAAA,wEAAO,iBAAOC,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,+CAA0BH,WAAW,CAACI,WAAZ,CAAwBF,KAAxB,EAA+BC,OAA/B,CAA1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AACD,CAJD","sourcesContent":["'use strict'\n\nconst SubscriptionTracker = require('./subscription-tracker')\n\nmodule.exports = api => {\n  const subsTracker = SubscriptionTracker.singleton()\n  // eslint-disable-next-line require-await\n  return async (topic, handler) => subsTracker.unsubscribe(topic, handler)\n}\n"]},"metadata":{},"sourceType":"script"}