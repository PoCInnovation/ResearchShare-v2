{"ast":null,"code":"import{useContext,createContext}from'react';import create from'ipfs-http-client';var IPFSContext=/*#__PURE__*/createContext(create({host:'ipfs.infura.io',port:5001,protocol:'https'}));export default function useIPFS(){var IPFS=useContext(IPFSContext);return IPFS;}","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/reactrs/src/utils/Ipfs.ts"],"names":["useContext","createContext","create","IPFSContext","host","port","protocol","useIPFS","IPFS"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,aAArB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAEA,GAAMC,CAAAA,WAAW,cAAGF,aAAa,CAACC,MAAM,CAAC,CACrCE,IAAI,CAAG,gBAD8B,CAErCC,IAAI,CAAG,IAF8B,CAGrCC,QAAQ,CAAG,OAH0B,CAAD,CAAP,CAAjC,CAMA,cAAe,SAASC,CAAAA,OAAT,EAAmB,CAC9B,GAAMC,CAAAA,IAAI,CAAGR,UAAU,CAACG,WAAD,CAAvB,CACA,MAAOK,CAAAA,IAAP,CACH","sourcesContent":["import { useContext, createContext } from 'react';\nimport create from 'ipfs-http-client';\n\nconst IPFSContext = createContext(create({\n    host : 'ipfs.infura.io',\n    port : 5001,\n    protocol : 'https'\n}));\n\nexport default function useIPFS() {\n    const IPFS = useContext(IPFSContext);\n    return IPFS;\n}"]},"metadata":{},"sourceType":"module"}