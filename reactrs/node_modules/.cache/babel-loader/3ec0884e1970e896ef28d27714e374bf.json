{"ast":null,"code":"'use strict';\n\nvar normaliseContent = require('./normalise-content.browser');\n\nvar normaliseInput = require('./normalise-input');\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {import('ipfs-core-types/src/files').ImportSource} input\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Blob>>}\n */\n\n\nmodule.exports = function (input) {\n  return normaliseInput(input, normaliseContent);\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-core-utils/src/files/normalise-input/index.browser.js"],"names":["normaliseContent","require","normaliseInput","module","exports","input"],"mappings":"AAAA;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,6BAAD,CAAhC;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAACC,KAAD;AAAA,SAAWH,cAAc,CAACG,KAAD,EAAQL,gBAAR,CAAzB;AAAA,CAAjB","sourcesContent":["'use strict'\n\nconst normaliseContent = require('./normalise-content.browser')\nconst normaliseInput = require('./normalise-input')\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {import('ipfs-core-types/src/files').ImportSource} input\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Blob>>}\n */\nmodule.exports = (input) => normaliseInput(input, normaliseContent)\n"]},"metadata":{},"sourceType":"script"}