{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nvar Client = require('./core'); // Set default configuration and call create function with them\n\n/**\n * @typedef { import(\"./core\").ClientOptions } ClientOptions\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: ClientOptions) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: ClientOptions) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\n\n\nvar configure = function configure(fn) {\n  return function (options) {\n    return fn(new Client(options), options);\n  };\n};\n\nmodule.exports = configure;","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-http-client/src/lib/configure.js"],"names":["Client","require","configure","fn","options","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AACxB,SAAO,UAACC,OAAD,EAAa;AAClB,WAAOD,EAAE,CAAC,IAAIH,MAAJ,CAAWI,OAAX,CAAD,EAAsBA,OAAtB,CAAT;AACD,GAFD;AAGD,CAJD;;AAKAC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB","sourcesContent":["'use strict'\n/* eslint-env browser */\n\nconst Client = require('./core')\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"./core\").ClientOptions } ClientOptions\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: ClientOptions) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: ClientOptions) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nconst configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\nmodule.exports = configure\n"]},"metadata":{},"sourceType":"script"}