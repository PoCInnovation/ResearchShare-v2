{"ast":null,"code":"var _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar BufferList = require('bl/BufferList');\n\nvar ZERO_OFFSET = '0'.charCodeAt(0);\nvar USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary');\nvar GNU_MAGIC = Buffer.from('ustar\\x20', 'binary');\nvar GNU_VER = Buffer.from('\\x20\\x00', 'binary');\nvar MAGIC_OFFSET = 257;\nvar VERSION_OFFSET = 263;\n\nvar clamp = function clamp(index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue;\n  index = ~~index; // Coerce to integer.\n\n  if (index >= len) return len;\n  if (index >= 0) return index;\n  index += len;\n  if (index >= 0) return index;\n  return 0;\n};\n\nvar toType = function toType(flag) {\n  switch (flag) {\n    case 0:\n      return 'file';\n\n    case 1:\n      return 'link';\n\n    case 2:\n      return 'symlink';\n\n    case 3:\n      return 'character-device';\n\n    case 4:\n      return 'block-device';\n\n    case 5:\n      return 'directory';\n\n    case 6:\n      return 'fifo';\n\n    case 7:\n      return 'contiguous-file';\n\n    case 72:\n      return 'pax-header';\n\n    case 55:\n      return 'pax-global-header';\n\n    case 27:\n      return 'gnu-long-link-path';\n\n    case 28:\n    case 30:\n      return 'gnu-long-path';\n  }\n\n  return null;\n};\n\nvar indexOf = function indexOf(block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block.get(offset) === num) return offset;\n  }\n\n  return end;\n};\n\nvar cksum = function cksum(block) {\n  var sum = 8 * 32;\n\n  for (var i = 0; i < 148; i++) {\n    sum += block.get(i);\n  }\n\n  for (var j = 156; j < 512; j++) {\n    sum += block.get(j);\n  }\n\n  return sum;\n};\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\n\n\nfunction parse256(buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive;\n  if (buf.get(0) === 0x80) positive = true;else if (buf.get(0) === 0xFF) positive = false;else return null; // build up a base-256 tuple from the least sig to the highest\n\n  var zero = false;\n  var tuple = [];\n\n  for (var i = buf.length - 1; i > 0; i--) {\n    var byte = buf.get(i);\n    if (positive) tuple.push(byte);else if (zero && byte === 0) tuple.push(0);else if (zero) {\n      zero = false;\n      tuple.push(0x100 - byte);\n    } else tuple.push(0xFF - byte);\n  }\n\n  var sum = 0;\n  var l = tuple.length;\n\n  for (i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i);\n  }\n\n  return positive ? sum : -1 * sum;\n}\n\nvar decodeOct = function decodeOct(val, offset, length) {\n  val = val.shallowSlice(offset, offset + length);\n  offset = 0; // If prefixed with 0x80 then parse as a base-256 integer\n\n  if (val.get(offset) & 0x80) {\n    return parse256(val);\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val.get(offset) === 32) {\n      offset++;\n    }\n\n    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length);\n\n    while (offset < end && val.get(offset) === 0) {\n      offset++;\n    }\n\n    if (end === offset) return 0;\n    return parseInt(val.shallowSlice(offset, end).toString(), 8);\n  }\n};\n\nvar decodeStr = function decodeStr(val, offset, length, encoding) {\n  return val.shallowSlice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding);\n};\n\nexports.decodeLongPath = function (buf, encoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf);\n  return decodeStr(buf, 0, buf.length, encoding);\n};\n\nexports.decodePax = function (buf) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf);\n  var result = {};\n\n  while (buf.length) {\n    var i = 0;\n\n    while (i < buf.length && buf.get(i) !== 32) {\n      i++;\n    }\n\n    var len = parseInt(buf.shallowSlice(0, i).toString(), 10);\n    if (!len) return result;\n    var b = buf.shallowSlice(i + 1, len - 1).toString();\n    var keyIndex = b.indexOf('=');\n    if (keyIndex === -1) return result;\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1);\n    buf = buf.shallowSlice(len);\n  }\n\n  return result;\n};\n\nexports.decode = function (buf, filenameEncoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf);\n  var typeflag = buf.get(156) === 0 ? 0 : buf.get(156) - ZERO_OFFSET;\n  var name = decodeStr(buf, 0, 100, filenameEncoding);\n  var mode = decodeOct(buf, 100, 8);\n  var uid = decodeOct(buf, 108, 8);\n  var gid = decodeOct(buf, 116, 8);\n  var size = decodeOct(buf, 124, 12);\n  var mtime = decodeOct(buf, 136, 12);\n  var type = toType(typeflag);\n  var linkname = buf.get(157) === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding);\n  var uname = decodeStr(buf, 265, 32);\n  var gname = decodeStr(buf, 297, 32);\n  var devmajor = decodeOct(buf, 329, 8);\n  var devminor = decodeOct(buf, 337, 8);\n  var c = cksum(buf); // checksum is still initial value if header was null.\n\n  if (c === 8 * 32) return null; // valid checksum\n\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?');\n\n  if (USTAR_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf.get(345)) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name;\n  } else if (GNU_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 && GNU_VER.compare(buf.slice(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {// 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.');\n  } // to support old tar versions that use trailing / to indicate dirs\n\n\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5;\n  return {\n    name: name,\n    mode: mode,\n    uid: uid,\n    gid: gid,\n    size: size,\n    mtime: new Date(1000 * mtime),\n    type: type,\n    linkname: linkname,\n    uname: uname,\n    gname: gname,\n    devmajor: devmajor,\n    devminor: devminor\n  };\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/it-tar/extract-headers.js"],"names":["require","Buffer","BufferList","ZERO_OFFSET","charCodeAt","USTAR_MAGIC","from","GNU_MAGIC","GNU_VER","MAGIC_OFFSET","VERSION_OFFSET","clamp","index","len","defaultValue","toType","flag","indexOf","block","num","offset","end","get","cksum","sum","i","j","parse256","buf","positive","zero","tuple","length","byte","push","l","Math","pow","decodeOct","val","shallowSlice","parseInt","toString","decodeStr","encoding","exports","decodeLongPath","isBufferList","decodePax","result","b","keyIndex","slice","decode","filenameEncoding","typeflag","name","mode","uid","gid","size","mtime","type","linkname","uname","gname","devmajor","devminor","c","Error","compare","Date"],"mappings":"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","sourcesContent":["const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\n\nvar ZERO_OFFSET = '0'.charCodeAt(0)\nvar USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary')\nvar GNU_MAGIC = Buffer.from('ustar\\x20', 'binary')\nvar GNU_VER = Buffer.from('\\x20\\x00', 'binary')\nvar MAGIC_OFFSET = 257\nvar VERSION_OFFSET = 263\n\nvar clamp = function (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nvar toType = function (flag) {\n  switch (flag) {\n    case 0:\n      return 'file'\n    case 1:\n      return 'link'\n    case 2:\n      return 'symlink'\n    case 3:\n      return 'character-device'\n    case 4:\n      return 'block-device'\n    case 5:\n      return 'directory'\n    case 6:\n      return 'fifo'\n    case 7:\n      return 'contiguous-file'\n    case 72:\n      return 'pax-header'\n    case 55:\n      return 'pax-global-header'\n    case 27:\n      return 'gnu-long-link-path'\n    case 28:\n    case 30:\n      return 'gnu-long-path'\n  }\n\n  return null\n}\n\nvar indexOf = function (block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block.get(offset) === num) return offset\n  }\n  return end\n}\n\nvar cksum = function (block) {\n  var sum = 8 * 32\n  for (var i = 0; i < 148; i++) sum += block.get(i)\n  for (var j = 156; j < 512; j++) sum += block.get(j)\n  return sum\n}\n\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive\n  if (buf.get(0) === 0x80) positive = true\n  else if (buf.get(0) === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  var zero = false\n  var tuple = []\n  for (var i = buf.length - 1; i > 0; i--) {\n    var byte = buf.get(i)\n    if (positive) tuple.push(byte)\n    else if (zero && byte === 0) tuple.push(0)\n    else if (zero) {\n      zero = false\n      tuple.push(0x100 - byte)\n    } else tuple.push(0xFF - byte)\n  }\n\n  var sum = 0\n  var l = tuple.length\n  for (i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nvar decodeOct = function (val, offset, length) {\n  val = val.shallowSlice(offset, offset + length)\n  offset = 0\n\n  // If prefixed with 0x80 then parse as a base-256 integer\n  if (val.get(offset) & 0x80) {\n    return parse256(val)\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val.get(offset) === 32) offset++\n    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)\n    while (offset < end && val.get(offset) === 0) offset++\n    if (end === offset) return 0\n    return parseInt(val.shallowSlice(offset, end).toString(), 8)\n  }\n}\n\nvar decodeStr = function (val, offset, length, encoding) {\n  return val.shallowSlice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)\n}\n\nexports.decodeLongPath = function (buf, encoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  return decodeStr(buf, 0, buf.length, encoding)\n}\n\nexports.decodePax = function (buf) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  var result = {}\n\n  while (buf.length) {\n    var i = 0\n    while (i < buf.length && buf.get(i) !== 32) i++\n    var len = parseInt(buf.shallowSlice(0, i).toString(), 10)\n    if (!len) return result\n\n    var b = buf.shallowSlice(i + 1, len - 1).toString()\n    var keyIndex = b.indexOf('=')\n    if (keyIndex === -1) return result\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)\n\n    buf = buf.shallowSlice(len)\n  }\n\n  return result\n}\n\nexports.decode = function (buf, filenameEncoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  var typeflag = buf.get(156) === 0 ? 0 : buf.get(156) - ZERO_OFFSET\n\n  var name = decodeStr(buf, 0, 100, filenameEncoding)\n  var mode = decodeOct(buf, 100, 8)\n  var uid = decodeOct(buf, 108, 8)\n  var gid = decodeOct(buf, 116, 8)\n  var size = decodeOct(buf, 124, 12)\n  var mtime = decodeOct(buf, 136, 12)\n  var type = toType(typeflag)\n  var linkname = buf.get(157) === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)\n  var uname = decodeStr(buf, 265, 32)\n  var gname = decodeStr(buf, 297, 32)\n  var devmajor = decodeOct(buf, 329, 8)\n  var devminor = decodeOct(buf, 337, 8)\n\n  var c = cksum(buf)\n\n  // checksum is still initial value if header was null.\n  if (c === 8 * 32) return null\n\n  // valid checksum\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')\n\n  if (USTAR_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf.get(345)) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name\n  } else if (GNU_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 &&\n             GNU_VER.compare(buf.slice(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {\n    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.')\n  }\n\n  // to support old tar versions that use trailing / to indicate dirs\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5\n\n  return {\n    name: name,\n    mode: mode,\n    uid: uid,\n    gid: gid,\n    size: size,\n    mtime: new Date(1000 * mtime),\n    type: type,\n    linkname: linkname,\n    uname: uname,\n    gname: gname,\n    devmajor: devmajor,\n    devminor: devminor\n  }\n}\n"]},"metadata":{},"sourceType":"script"}