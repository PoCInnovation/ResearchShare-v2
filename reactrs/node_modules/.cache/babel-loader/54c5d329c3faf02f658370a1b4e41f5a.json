{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar BufferList = require('bl/BufferList');\n\nvar _require2 = require('iso-constants'),\n    S_IFMT = _require2.S_IFMT,\n    S_IFBLK = _require2.S_IFBLK,\n    S_IFCHR = _require2.S_IFCHR,\n    S_IFDIR = _require2.S_IFDIR,\n    S_IFIFO = _require2.S_IFIFO,\n    S_IFLNK = _require2.S_IFLNK;\n\nvar concat = require('it-concat');\n\nvar Headers = require('./pack-headers');\n\nvar DMODE = parseInt('755', 8);\nvar FMODE = parseInt('644', 8);\nvar END_OF_TAR = Buffer.alloc(1024);\n\nfunction modeToType(mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n\n    case S_IFCHR:\n      return 'character-device';\n\n    case S_IFDIR:\n      return 'directory';\n\n    case S_IFIFO:\n      return 'fifo';\n\n    case S_IFLNK:\n      return 'symlink';\n  }\n\n  return 'file';\n}\n\nfunction getPadding(size) {\n  size &= 511;\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size));\n}\n\nfunction encode(header) {\n  if (!header.pax) {\n    var encoded = Headers.encode(header);\n    if (encoded) return encoded;\n  }\n\n  return encodePax(header);\n}\n\nfunction encodePax(header) {\n  var paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  });\n  var newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new BufferList([Headers.encode(newHeader), paxHeader, getPadding(paxHeader.length), Headers.encode(_objectSpread(_objectSpread({}, newHeader), {}, {\n    size: header.size,\n    type: header.type\n  }))]);\n}\n\nmodule.exports = function () {\n  return /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, _value3, header, body, written, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, chunk, overflow;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(source);\n\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 6:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 10;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 10:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 81;\n                break;\n              }\n\n              _value3 = _value, header = _value3.header, body = _value3.body;\n              if (!header.size || header.type === 'symlink') header.size = 0;\n              if (!header.type) header.type = modeToType(header.mode);\n              if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE;\n              if (!header.uid) header.uid = 0;\n              if (!header.gid) header.gid = 0;\n              if (!header.mtime) header.mtime = new Date();\n              if (typeof body === 'string') body = Buffer.from(body);\n\n              if (!(Buffer.isBuffer(body) || BufferList.isBufferList(body))) {\n                _context.next = 25;\n                break;\n              }\n\n              header.size = body.length;\n              _context.next = 24;\n              return new BufferList([encode(header), body, getPadding(header.size)]);\n\n            case 24:\n              return _context.abrupt(\"continue\", 78);\n\n            case 25:\n              if (!(header.type === 'symlink' && !header.linkname)) {\n                _context.next = 32;\n                break;\n              }\n\n              _context.next = 28;\n              return _awaitAsyncGenerator(concat(body));\n\n            case 28:\n              header.linkname = _context.sent.toString();\n              _context.next = 31;\n              return encode(header);\n\n            case 31:\n              return _context.abrupt(\"continue\", 78);\n\n            case 32:\n              _context.next = 34;\n              return encode(header);\n\n            case 34:\n              if (!(header.type !== 'file' && header.type !== 'contiguous-file')) {\n                _context.next = 36;\n                break;\n              }\n\n              return _context.abrupt(\"continue\", 78);\n\n            case 36:\n              written = 0;\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _context.prev = 39;\n              _iterator2 = _asyncIterator(body);\n\n            case 41:\n              _context.next = 43;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 43:\n              _step2 = _context.sent;\n              _iteratorNormalCompletion2 = _step2.done;\n              _context.next = 47;\n              return _awaitAsyncGenerator(_step2.value);\n\n            case 47:\n              _value2 = _context.sent;\n\n              if (_iteratorNormalCompletion2) {\n                _context.next = 56;\n                break;\n              }\n\n              chunk = _value2;\n              written += chunk.length;\n              _context.next = 53;\n              return BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk);\n\n            case 53:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 41;\n              break;\n\n            case 56:\n              _context.next = 62;\n              break;\n\n            case 58:\n              _context.prev = 58;\n              _context.t0 = _context[\"catch\"](39);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t0;\n\n            case 62:\n              _context.prev = 62;\n              _context.prev = 63;\n\n              if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                _context.next = 67;\n                break;\n              }\n\n              _context.next = 67;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 67:\n              _context.prev = 67;\n\n              if (!_didIteratorError2) {\n                _context.next = 70;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 70:\n              return _context.finish(67);\n\n            case 71:\n              return _context.finish(62);\n\n            case 72:\n              if (!(written !== header.size)) {\n                _context.next = 74;\n                break;\n              }\n\n              throw new Error('size mismatch');\n\n            case 74:\n              overflow = getPadding(header.size);\n\n              if (!overflow) {\n                _context.next = 78;\n                break;\n              }\n\n              _context.next = 78;\n              return overflow;\n\n            case 78:\n              _iteratorNormalCompletion = true;\n              _context.next = 4;\n              break;\n\n            case 81:\n              _context.next = 87;\n              break;\n\n            case 83:\n              _context.prev = 83;\n              _context.t1 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 87:\n              _context.prev = 87;\n              _context.prev = 88;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 92;\n                break;\n              }\n\n              _context.next = 92;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 92:\n              _context.prev = 92;\n\n              if (!_didIteratorError) {\n                _context.next = 95;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 95:\n              return _context.finish(92);\n\n            case 96:\n              return _context.finish(87);\n\n            case 97:\n              _context.next = 99;\n              return new BufferList(END_OF_TAR);\n\n            case 99:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 83, 87, 97], [39, 58, 62, 72], [63,, 67, 71], [88,, 92, 96]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/it-tar/pack.js"],"names":["require","Buffer","BufferList","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","concat","Headers","DMODE","parseInt","FMODE","END_OF_TAR","alloc","modeToType","mode","getPadding","size","slice","encode","header","pax","encoded","encodePax","paxHeader","name","linkname","newHeader","uid","gid","length","mtime","type","uname","gname","devmajor","devminor","module","exports","source","body","Date","from","isBuffer","isBufferList","toString","written","chunk","Error","overflow"],"mappings":"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","sourcesContent":["const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\nconst concat = require('it-concat')\nconst Headers = require('./pack-headers')\n\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\n\nconst END_OF_TAR = Buffer.alloc(1024)\n\nfunction modeToType (mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n  }\n  return 'file'\n}\n\nfunction getPadding (size) {\n  size &= 511\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\n}\n\nfunction encode (header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header)\n    if (encoded) return encoded\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  })\n\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new BufferList([\n    Headers.encode(newHeader),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\n  ])\n}\n\nmodule.exports = () => async function * (source) {\n  for await (let { header, body } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0\n    if (!header.type) header.type = modeToType(header.mode)\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\n    if (!header.uid) header.uid = 0\n    if (!header.gid) header.gid = 0\n    if (!header.mtime) header.mtime = new Date()\n\n    if (typeof body === 'string') body = Buffer.from(body)\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length\n      yield new BufferList([encode(header), body, getPadding(header.size)])\n      continue\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString()\n      yield encode(header)\n      continue\n    }\n\n    yield encode(header)\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue\n    }\n\n    let written = 0\n    for await (const chunk of body) {\n      written += chunk.length\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\n    }\n\n    if (written !== header.size) { // corrupting tar\n      throw new Error('size mismatch')\n    }\n\n    const overflow = getPadding(header.size)\n    if (overflow) yield overflow\n  }\n\n  yield new BufferList(END_OF_TAR)\n}\n"]},"metadata":{},"sourceType":"script"}