{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\n\n\nmodule.exports = function (codecs, options) {\n  var fn = configure(function (api) {\n    var dagPut = require('../dag/put')(codecs, options);\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n\n\n    function put(_x) {\n      return _put.apply(this, arguments);\n    }\n\n    function _put() {\n      _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(obj) {\n        var options,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                return _context.abrupt(\"return\", dagPut(obj, _objectSpread(_objectSpread({}, options), {}, {\n                  format: 'dag-pb',\n                  hashAlg: 'sha2-256',\n                  version: 0\n                })));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _put.apply(this, arguments);\n    }\n\n    return put;\n  });\n  return fn(options);\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/ipfs-http-client/src/object/put.js"],"names":["configure","require","module","exports","codecs","options","fn","api","dagPut","put","obj","format","hashAlg","version"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAASC,OAAT,EAAqB;AACpC,MAAMC,EAAE,GAAGN,SAAS,CAAC,UAACO,GAAD,EAAS;AAC5B,QAAMC,MAAM,GAAGP,OAAO,CAAC,YAAD,CAAP,CAAsBG,MAAtB,EAA8BC,OAA9B,CAAf;AAEA;AACJ;AACA;;;AALgC,aAMbI,GANa;AAAA;AAAA;;AAAA;AAAA,sEAM5B,iBAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBL,gBAAAA,OAAzB,2DAAmC,EAAnC;AAAA,iDACSG,MAAM,CAACE,GAAD,kCACRL,OADQ;AAEXM,kBAAAA,MAAM,EAAE,QAFG;AAGXC,kBAAAA,OAAO,EAAE,UAHE;AAIXC,kBAAAA,OAAO,EAAE;AAJE,mBADf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAN4B;AAAA;AAAA;;AAc5B,WAAOJ,GAAP;AACD,GAfmB,CAApB;AAiBA,SAAOH,EAAE,CAACD,OAAD,CAAT;AACD,CAnBD","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/src/multicodecs')} codecs\n * @param {import('../types').Options} options\n */\nmodule.exports = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = require('../dag/put')(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        format: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 0\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n"]},"metadata":{},"sourceType":"script"}