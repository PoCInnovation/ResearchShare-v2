{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist-for-peer')>}\n   */\n  function wantlistForPeer(_x) {\n    return _wantlistForPeer.apply(this, arguments);\n  }\n\n  function _wantlistForPeer() {\n    _wantlistForPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(peerId) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              // @ts-ignore - CID|string seems to confuse typedef\n              peerId = typeof peerId === 'string' ? peerId : new CID(peerId).toString();\n              _context.next = 4;\n              return api.post('bitswap/wantlist', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  peer: peerId\n                })),\n                headers: options.headers\n              });\n\n            case 4:\n              _context.next = 6;\n              return _context.sent.json();\n\n            case 6:\n              res = _context.sent;\n              return _context.abrupt(\"return\", (res.Keys || []).map(function (k) {\n                return new CID(k['/']);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _wantlistForPeer.apply(this, arguments);\n  }\n\n  return wantlistForPeer;\n});","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","wantlistForPeer","peerId","options","toString","post","timeout","signal","searchParams","peer","headers","json","res","Keys","map","k"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,eAJiB;AAAA;AAAA;;AAAA;AAAA,gFAIhC,iBAAgCC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwCC,cAAAA,OAAxC,2DAAkD,EAAlD;AACE;AACAD,cAAAA,MAAM,GAAG,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,IAAIR,GAAJ,CAAQQ,MAAR,EAAgBE,QAAhB,EAA/C;AAFF;AAAA,qBAI2BJ,GAAG,CAACK,IAAJ,CAAS,kBAAT,EAA6B;AACpDC,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OADmC;AAEpDC,gBAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoC;AAGpDC,gBAAAA,YAAY,EAAEX,iBAAiB,iCAC1BM,OAD0B;AAE7BM,kBAAAA,IAAI,EAAEP;AAFuB,mBAHqB;AAOpDQ,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAPmC,eAA7B,CAJ3B;;AAAA;AAAA;AAAA,mCAYMC,IAZN;;AAAA;AAIQC,cAAAA,GAJR;AAAA,+CAcS,CAACA,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBC,GAAjB,CAAqB,UAAAC,CAAC;AAAA,uBAAI,IAAIrB,GAAJ,CAAQqB,CAAC,CAAC,GAAD,CAAT,CAAJ;AAAA,eAAtB,CAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAoBhC,SAAOd,eAAP;AACD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist-for-peer')>}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    // @ts-ignore - CID|string seems to confuse typedef\n    peerId = typeof peerId === 'string' ? peerId : new CID(peerId).toString()\n\n    const res = await (await api.post('bitswap/wantlist', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map(k => new CID(k['/']))\n  }\n  return wantlistForPeer\n})\n"]},"metadata":{},"sourceType":"script"}