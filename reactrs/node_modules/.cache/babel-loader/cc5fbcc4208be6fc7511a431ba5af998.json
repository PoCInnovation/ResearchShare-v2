{"ast":null,"code":"'use strict';\n\nvar _require = require('ipfs-utils/src/globalthis'),\n    Blob = _require.Blob;\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\n\n\nfunction isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\n/**\n * @param {any} obj\n * @returns {obj is Blob}\n */\n\n\nfunction isBlob(obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/files').ToEntry}\n */\n\n\nfunction isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\n\n\nvar isReadableStream = function isReadableStream(value) {\n  return value && typeof value.getReader === 'function';\n};\n/**\n * @param {any} mtime\n * @returns {{secs:number, nsecs:number}|undefined}\n */\n\n\nfunction mtimeToObject(mtime) {\n  if (mtime == null) {\n    return undefined;\n  } // Javascript Date\n\n\n  if (mtime instanceof Date) {\n    var ms = mtime.getTime();\n    var secs = Math.floor(ms / 1000);\n    return {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  } // { secs, nsecs }\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    };\n  } // UnixFS TimeSpec\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    };\n  } // process.hrtime()\n\n\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    };\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n   // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n     return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n\n}\n/**\n * @param {any} mode\n * @returns {number|undefined}\n */\n\n\nfunction modeToNumber(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n\n  if (typeof mode === 'number') {\n    return mode;\n  }\n\n  mode = mode.toString();\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8);\n  } // decimal string\n\n\n  return parseInt(mode, 10);\n}\n\nmodule.exports = {\n  isBytes: isBytes,\n  isBlob: isBlob,\n  isFileObject: isFileObject,\n  isReadableStream: isReadableStream,\n  mtimeToObject: mtimeToObject,\n  modeToNumber: modeToNumber\n};","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-core-utils/src/files/normalise-input/utils.js"],"names":["require","Blob","isBytes","obj","ArrayBuffer","isView","isBlob","isFileObject","path","content","isReadableStream","value","getReader","mtimeToObject","mtime","undefined","Date","ms","getTime","secs","Math","floor","nsecs","Object","prototype","hasOwnProperty","call","Seconds","FractionalNanoseconds","Array","isArray","modeToNumber","mode","toString","substring","parseInt","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Blob } = require('ipfs-utils/src/globalthis')\n\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is Blob}\n */\nfunction isBlob (obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/files').ToEntry}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n\n/**\n * @param {any} mtime\n * @returns {{secs:number, nsecs:number}|undefined}\n */\nfunction mtimeToObject (mtime) {\n  if (mtime == null) {\n    return undefined\n  }\n\n  // Javascript Date\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    return {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  // { secs, nsecs }\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    }\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n\n    return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n}\n\n/**\n * @param {any} mode\n * @returns {number|undefined}\n */\nfunction modeToNumber (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8)\n  }\n\n  // decimal string\n  return parseInt(mode, 10)\n}\n\nmodule.exports = {\n  isBytes,\n  isBlob,\n  isFileObject,\n  isReadableStream,\n  mtimeToObject,\n  modeToNumber\n}\n"]},"metadata":{},"sourceType":"script"}