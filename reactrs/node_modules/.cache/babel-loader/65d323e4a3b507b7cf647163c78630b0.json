{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/dns')>}\n   */\n  var dns = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(domain) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dns', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: domain\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Path);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function dns(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return dns;\n});","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/node_modules/ipfs-http-client/src/dns.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","dns","domain","options","post","timeout","signal","searchParams","arg","headers","res","json","data","Path"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;AAChC;AACF;AACA;AACE,MAAMC,GAAG;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeC,cAAAA,OAAf,2DAAyB,EAAzB;AAAA;AAAA,qBACQH,GAAG,CAACI,IAAJ,CAAS,KAAT,EAAgB;AAChCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADe;AAEhCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFgB;AAGhCC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAEN;AADwB,mBAE1BC,OAF0B,EAHC;AAOhCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AAPe,eAAhB,CADR;;AAAA;AACJC,cAAAA,GADI;AAAA;AAAA,qBAUSA,GAAG,CAACC,IAAJ,EAVT;;AAAA;AAUJC,cAAAA,IAVI;AAAA,+CAYHA,IAAI,CAACC,IAZF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAHZ,GAAG;AAAA;AAAA;AAAA,KAAT;;AAeA,SAAOA,GAAP;AACD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/dns')>}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n"]},"metadata":{},"sourceType":"script"}