{"version":3,"sources":["components/User/UserContract.tsx","components/MetaMask/MetaMask.tsx","utils/Ipfs.ts","components/ButtonUpload/ButtonUpload.tsx","components/ButtonDownload/ButtonDownload.tsx","components/IpfsHandler/IpfsHandler.tsx","components/Review/ChangeRequest.tsx","components/Review/ChangeRequests.tsx","components/Review/Review.tsx","app/App.tsx","index.tsx"],"names":["pulseLoading","css","pulseNotLoading","UserContract","useState","spinner","id","className","size","color","MetaMask","account","useMetaMask","IPFSContext","createContext","create","host","port","protocol","useIPFS","useContext","ButtonUpload","IPFS","React","filename","setFileName","fileContent","setFileContent","fileHash","setFileHash","paperField","setPaperField","a","ext","split","pop","files","mkdir","write","stat","direntry","cid","Input","placeholder","onChange","event","target","value","name","type","Button","onClick","variant","toString","ButtonDownload","setCID","ls","file","buffer","cat","all","data","blob","Blob","fileDownload","IpfsHandling","ChangeRequest","changeRequests","setChangeRequests","index","TextField","label","page","e","newArr","handleChangeChangeRequestPage","line","handleChangeChangeRequestLine","multiline","fullWidth","comment","handleChangeChangeRequestComment","ChangeRequests","hash","reviewStatus","length","map","_","splice","handleClickDeleteChangeRequest","style","marginRight","marginLeft","Review","setReviewStatus","FormControl","InputLabel","NativeSelect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2315cad3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { css } from \"@emotion/react\";\nimport PulseLoader from 'react-spinners/PulseLoader';\n\nimport { UserInteract } from './UserInteract';\nimport './UserContract.css';\n\nconst pulseLoading = css`\n    display: block;\n`;\n\nconst pulseNotLoading = css`\n    display: none;\n`;\n\nexport default function UserContract() {\n    const [spinner, setSpinner] = useState(false);\n\n    return (\n        <div id=\"ConcatContract\">\n            <div className=\"user-margins\">\n                <div className=\"user-loader\">\n                    <PulseLoader\n                        css={spinner ? pulseLoading : pulseNotLoading}\n                        size={10}\n                        color={\"#123abc\"}\n                    />\n                </div>\n\n                { /*contract*/null ?\n                    <UserInteract\n                        contract={/*contract*/null}\n                        setSpinner={setSpinner}\n                    />\n                : null }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport \"./MetaMask.css\";\n\nimport UserContract from '../User/UserContract';\nimport { useMetaMask } from 'metamask-react';\n\nexport default function MetaMask() {\n    const { account } = useMetaMask();\n\n    return (\n        <div className=\"metamask-register\">\n            <h2>Register</h2>\n            { account ?? <UserContract/> }\n        </div>\n    )\n}","import { useContext, createContext } from 'react';\nimport { create } from 'ipfs-http-client';\n\nconst IPFSContext = createContext(create({\n    host : 'ipfs.infura.io',\n    port : 5001,\n    protocol : 'https'\n}));\n\nexport default function useIPFS() {\n    const IPFS = useContext(IPFSContext);\n    return IPFS;\n}","import React, { ChangeEvent } from 'react';\nimport { CID } from \"ipfs-http-client\";\nimport useIPFS from '../../utils/Ipfs';\nimport './ButtonUpload.css';\n\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\n\nexport default function ButtonUpload() {\n    const IPFS = useIPFS();\n    const [filename, setFileName] = React.useState(\"\");\n    const [fileContent, setFileContent] = React.useState<File | null>(null);\n    const [fileHash, setFileHash] = React.useState<CID | null>(null);\n    const [paperField, setPaperField] = React.useState(\"\");\n\n    function changeField(event: ChangeEvent<HTMLInputElement>) {\n        setPaperField(event.target.value);\n    }\n\n    function changeFile(event: ChangeEvent<HTMLInputElement>) {\n        setFileContent(event.target.files?.[0] ?? null);\n        setFileName(event.target.files?.[0].name ?? \"\");\n    }\n\n    async function submitPaper() {\n        if (filename && fileContent) {\n            const ext = filename.split('.').pop() ?? \".txt\";\n            await IPFS.files.mkdir(\"/reactrs-paper\");\n            await IPFS.files.write(`/reactrs-paper/${paperField}${ext}`, fileContent, { create: true });\n            const direntry = await IPFS.files.stat(\"/reactrs-paper\");\n            setFileHash(direntry.cid);\n        }\n    };\n\n    return (\n        <div>\n            <div id=\"upload\">\n                <Input placeholder='Field' onChange={changeField} />\n                <input id=\"upload-input\" onChange={changeFile} type=\"file\"/>\n                <Button id=\"upload-button\" onClick={submitPaper} variant=\"contained\" color=\"primary\">\n                    Upload\n                </Button>\n            </div>\n            <br/>\n            {fileHash ? <div id=\"upload-success\">{`Success: ${fileHash.toString()}`}</div> : null}\n        </div>\n    );\n}","import { ChangeEvent, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport useIPFS from '../../utils/Ipfs';\nimport './ButtonDownload.css';\n\nimport fileDownload from 'js-file-download';\nimport all from 'it-all';\n\nexport default function ButtonDownload() {\n    const [cid, setCID] = useState(\"\");\n    const IPFS = useIPFS();\n\n    async function handleClick() {\n        if (cid !== \"\") {\n            for await (const file of IPFS.ls(cid)) {\n                const buffer = IPFS.cat(file.cid);\n                const data = await all(buffer);\n                const blob = new Blob(data);\n                fileDownload(blob, file.name);\n            }\n        }\n    }\n\n    function changeInput(event: ChangeEvent<HTMLInputElement>) {\n        setCID(event.target.value);\n    }\n\n    return (\n        <div id=\"download\">\n            <input className=\"download-input\" onChange={changeInput} type=\"text\" name=\"HashField\"/>\n            <Button className=\"download-button\" onClick={handleClick} variant=\"contained\" color=\"primary\">\n                Download\n            </Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport \"./IpfsHandler.css\";\nimport ButtonUpload from '../ButtonUpload/ButtonUpload';\nimport ButtonDownload from '../ButtonDownload/ButtonDownload';\n\nexport default function IpfsHandling() {\n    return (\n        <div className=\"ipfs-handling\">\n            <div className=\"ipfs-margins\">\n                <h2>Research Paper</h2>\n                <ButtonUpload/>\n                <br/><br/>\n                <ButtonDownload/>\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\n\nimport \"./ChangeRequest.css\";\nimport TextField from '@material-ui/core/TextField';\n\nexport interface ChangeRequestElement {\n    comment: string;\n    page: string;\n    line: string\n}\n\nexport default function ChangeRequest({changeRequests, setChangeRequests, value, index}: {\n    changeRequests: Array<ChangeRequestElement>,\n    setChangeRequests: React.Dispatch<React.SetStateAction<ChangeRequestElement[]>>,\n    value: ChangeRequestElement,\n    index: number\n}) {\n    function handleChangeChangeRequestComment(event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index: number) {\n        const newArr = [...changeRequests];\n        newArr[index] = {...newArr[index], comment: event.target.value};\n        setChangeRequests(newArr);\n    }\n\n    function handleChangeChangeRequestPage(event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index: number) {\n        const newArr = [...changeRequests];\n        newArr[index] = {...newArr[index], page: event.target.value};\n        setChangeRequests(newArr);\n    }\n\n    function handleChangeChangeRequestLine(event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, index: number) {\n        const newArr = [...changeRequests];\n        newArr[index] = {...newArr[index], line: event.target.value};\n        setChangeRequests(newArr);\n    }\n\n    return (\n        <div id='ChangeRequestComment'>\n            <div>\n                <TextField\n                    className=\"change-request-page\"\n                    label=\"Page\"\n                    variant=\"filled\"\n                    value={value.page}\n                    onChange={(e) => handleChangeChangeRequestPage(e, index)}\n                />\n                <TextField\n                    className=\"change-request-line\"\n                    label=\"Line\"\n                    variant=\"filled\"\n                    value={value.line}\n                    onChange={(e) => handleChangeChangeRequestLine(e, index)}\n                />\n            </div><br/><br/>\n            <div className=\"change-request-comment\">\n                <TextField\n                    label=\"Comments\"\n                    placeholder=\"Enter Change Request Comments \"\n                    multiline\n                    fullWidth\n                    variant=\"filled\"\n                    value={value.comment}\n                    onChange={(e) => handleChangeChangeRequestComment(e, index)}\n                />\n            </div>\n        </div>\n    );\n}\n","import React, { MouseEvent } from 'react';\nimport \"./ChangeRequests.css\";\nimport ChangeRequest, { ChangeRequestElement } from \"./ChangeRequest\";\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nexport default function ChangeRequests({hash, reviewStatus}: {hash: string, reviewStatus: string}) {\n    const [changeRequests, setChangeRequests] = React.useState<Array<ChangeRequestElement>>([]);\n\n    function handleClickDeleteChangeRequest(_: MouseEvent<HTMLButtonElement>, index: number) {\n        const newArr = [...changeRequests];\n        newArr.splice(index, 1);\n        setChangeRequests(newArr);\n    }\n\n    function handleClickAddChangeRequest() {\n        const newArr = [...changeRequests, {comment: '', page: '', line: ''}];\n        setChangeRequests(newArr);\n    }\n\n    function handleClickDone() {\n        //submitReview(currentAccount, contract, hash, reviewStatus, changeRequests);\n    }\n\n    return (\n        <div>\n            { changeRequests.length ? changeRequests.map((value , index) => {\n                return (\n                    <div key={index} className=\"change-request\">\n                        <Button className=\"none-change-request\"\n                            onClick={(e) => {handleClickDeleteChangeRequest(e, index)}}>\n                            <ClearIcon/>\n                        </Button>\n                        <br/>\n                        <ChangeRequest\n                            changeRequests={changeRequests}\n                            setChangeRequests={setChangeRequests}\n                            value={value}\n                            index={index}\n                        />\n                        <p><br/></p>\n                    </div>\n                )\n            }) : <p>No change requests</p> }\n            <div style={{marginRight: '5%', marginLeft: '5%'}}>\n                <div className=\"change-request-wrapper\">\n                    <span className=\"change-request-left\"><p></p></span>\n                    <Button\n                        variant='outlined'\n                        onClick={handleClickAddChangeRequest}\n                    >\n                        Add Change Request\n                    </Button>\n                    <Button\n                        className=\"change-request-right\"\n                        onClick={handleClickDone}\n                        variant='contained'\n                        color='primary'\n                    >\n                        Done\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\n\nimport \"./Review.css\";\n\nimport ChangeRequests from './ChangeRequests';\n\nexport default function Review() {\n    const [reviewStatus, setReviewStatus] = React.useState('Refuse');\n    const [cid, setCID] = React.useState('');\n    const statusStrings = [\"Accept\", \"Refuse\", \"Request Change\"];\n\n    function handleChangeSelectStatus(event: ChangeEvent<HTMLSelectElement>) {\n        setReviewStatus(event.target.value);\n    }\n\n    function handleChange(event: ChangeEvent<HTMLInputElement>) {\n        setCID(event.target.value);\n    }\n\n    return (\n        <div className=\"review\">\n            <div className=\"review-margins\">\n                <div className=\"review-title\">\n                    <h2>Review</h2>\n                </div>\n                <div className=\"review-title-status\">\n                    <div className=\"review-status\">\n                        <FormControl variant=\"filled\">\n                            <InputLabel style={{marginLeft: '-7.5%'}}>Status</InputLabel><br/>\n                            <NativeSelect id=\"review_status\" value={reviewStatus} onChange={handleChangeSelectStatus}>\n                                { statusStrings.map((value, index) =>\n                                    (<option value={value} key={index}>{value}</option>)\n                                ) }\n                            </NativeSelect>\n                        </FormControl>\n                    </div><br/>\n                    <div className=\"review-cid\">\n                        <TextField id=\"standard-basic\" label=\"Hash\" value={cid} onChange={handleChange}/>\n                    </div>\n                </div>\n                <br/><ChangeRequests hash={cid} reviewStatus={reviewStatus}/>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\n\nimport MetaMask from '../components/MetaMask/MetaMask';\nimport IpfsHandling from '../components/IpfsHandler/IpfsHandler';\nimport Review from '../components/Review/Review';\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <h1>Research Share</h1>\n      <div className=\"app-wrapper\">\n          <div className=\"app-left\">\n            <MetaMask />\n          </div>\n          <div className=\"app-center\">\n            <IpfsHandling />\n            <br />\n            <Review />\n          </div>\n          <div className=\"app-right\">\n\n          </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { MetaMaskProvider } from 'metamask-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MetaMaskProvider>\n      <App />\n    </MetaMaskProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}