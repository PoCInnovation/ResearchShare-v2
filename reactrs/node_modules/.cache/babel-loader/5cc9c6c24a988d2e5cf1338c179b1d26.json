{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _objectWithoutProperties = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _asyncToGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _awaitAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('multiformats/cid'),\n    CID = _require.CID;\n\nvar Client = require('../../lib/core');\n\nvar Service = require('./service');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n\nvar Remote =\n/**\n * @param {Options} options\n */\nfunction Remote(options) {\n  _classCallCheck(this, Remote);\n\n  this.client = new Client(options);\n  /** @readonly */\n\n  this.service = new Service(options);\n};\n/**\n * @type {RemotePiningAPI[\"add\"]}\n */\n\n\nRemote.prototype.add = /*#__PURE__*/function () {\n  var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, _ref) {\n    var timeout, signal, headers, query, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            timeout = _ref.timeout, signal = _ref.signal, headers = _ref.headers, query = _objectWithoutProperties(_ref, [\"timeout\", \"signal\", \"headers\"]);\n            _context.next = 3;\n            return this.client.post('pin/remote/add', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeAddParams(_objectSpread({\n                cid: cid\n              }, query))\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.t0 = decodePin;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  function add(_x2, _x3) {\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}();\n/**\n * @type {RemotePiningAPI[\"ls\"]}\n */\n\n\nRemote.prototype.ls = /*#__PURE__*/function () {\n  var _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var timeout, signal, headers, query, response, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, pin;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            timeout = _ref2.timeout, signal = _ref2.signal, headers = _ref2.headers, query = _objectWithoutProperties(_ref2, [\"timeout\", \"signal\", \"headers\"]);\n            _context2.next = 3;\n            return _awaitAsyncGenerator(this.client.post('pin/remote/ls', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(query)\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context2.prev = 6;\n            _iterator = _asyncIterator(response.ndjson());\n\n          case 8:\n            _context2.next = 10;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 10:\n            _step = _context2.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context2.next = 14;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 14:\n            _value = _context2.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context2.next = 22;\n              break;\n            }\n\n            pin = _value;\n            _context2.next = 19;\n            return decodePin(pin);\n\n          case 19:\n            _iteratorNormalCompletion = true;\n            _context2.next = 8;\n            break;\n\n          case 22:\n            _context2.next = 28;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t0 = _context2[\"catch\"](6);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 28:\n            _context2.prev = 28;\n            _context2.prev = 29;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context2.next = 33;\n              break;\n            }\n\n            _context2.next = 33;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 33:\n            _context2.prev = 33;\n\n            if (!_didIteratorError) {\n              _context2.next = 36;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 36:\n            return _context2.finish(33);\n\n          case 37:\n            return _context2.finish(28);\n\n          case 38:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[6, 24, 28, 38], [29,, 33, 37]]);\n  }));\n\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}();\n/**\n * @type {RemotePiningAPI[\"rm\"]}\n */\n\n\nRemote.prototype.rm = /*#__PURE__*/function () {\n  var _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            timeout = _ref3.timeout, signal = _ref3.signal, headers = _ref3.headers, query = _objectWithoutProperties(_ref3, [\"timeout\", \"signal\", \"headers\"]);\n            _context3.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread(_objectSpread({}, query), {}, {\n                all: false\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  function rm(_x4) {\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n}();\n/**\n * @type {RemotePiningAPI[\"rmAll\"]}\n */\n\n\nRemote.prototype.rmAll = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4) {\n    var timeout, signal, headers, query;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            timeout = _ref4.timeout, signal = _ref4.signal, headers = _ref4.headers, query = _objectWithoutProperties(_ref4, [\"timeout\", \"signal\", \"headers\"]);\n            _context4.next = 3;\n            return this.client.post('pin/remote/rm', {\n              timeout: timeout,\n              signal: signal,\n              headers: headers,\n              searchParams: encodeQuery(_objectSpread(_objectSpread({}, query), {}, {\n                all: true\n              }))\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * @param {Object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\n\n\nvar decodePin = function decodePin(_ref6) {\n  var name = _ref6.Name,\n      status = _ref6.Status,\n      cid = _ref6.Cid;\n  return {\n    cid: CID.parse(cid),\n    name: name,\n    status: status\n  };\n};\n/**\n * @param {any} service\n * @returns {string}\n */\n\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n/**\n * @param {any} cid\n * @returns {string}\n */\n\n\nvar encodeCID = function encodeCID(cid) {\n  if (cid instanceof CID) {\n    return cid.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid));\n  }\n};\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\n\n\nvar encodeQuery = function encodeQuery(_ref7) {\n  var service = _ref7.service,\n      cid = _ref7.cid,\n      name = _ref7.name,\n      status = _ref7.status,\n      all = _ref7.all;\n  var query = toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iterator2 = _createForOfIteratorHelper(cid),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var value = _step2.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (status) {\n    var _iterator3 = _createForOfIteratorHelper(status),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _value2 = _step3.value;\n        query.append('status', _value2);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return query;\n};\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\n\n\nvar encodeAddParams = function encodeAddParams(_ref8) {\n  var cid = _ref8.cid,\n      service = _ref8.service,\n      background = _ref8.background,\n      name = _ref8.name,\n      origins = _ref8.origins;\n  var params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iterator4 = _createForOfIteratorHelper(origins),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var origin = _step4.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  return params;\n};\n\nmodule.exports = Remote;","map":{"version":3,"sources":["/home/thalusa/Documents/ResearchShare-v2/reactrs/node_modules/ipfs-http-client/src/pin/remote/index.js"],"names":["require","CID","Client","Service","toUrlSearchParams","Remote","options","client","service","prototype","add","cid","timeout","signal","headers","query","post","searchParams","encodeAddParams","response","decodePin","json","ls","encodeQuery","ndjson","pin","rm","all","rmAll","name","Name","status","Status","Cid","parse","encodeService","TypeError","encodeCID","toString","force","undefined","value","append","background","origins","params","arg","origin","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst Client = require('../../lib/core')\nconst Service = require('./service')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\nclass Remote {\n  /**\n   * @param {Options} options\n   */\n  constructor (options) {\n    this.client = new Client(options)\n    /** @readonly */\n    this.service = new Service(options)\n  }\n}\n\n/**\n * @type {RemotePiningAPI[\"add\"]}\n */\nRemote.prototype.add = async function add (cid, { timeout, signal, headers, ...query }) {\n  const response = await this.client.post('pin/remote/add', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeAddParams({ cid, ...query })\n  })\n\n  return decodePin(await response.json())\n}\n\n/**\n * @type {RemotePiningAPI[\"ls\"]}\n */\nRemote.prototype.ls = async function * ls ({ timeout, signal, headers, ...query }) {\n  const response = await this.client.post('pin/remote/ls', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery(query)\n  })\n\n  for await (const pin of response.ndjson()) {\n    yield decodePin(pin)\n  }\n}\n\n/**\n * @type {RemotePiningAPI[\"rm\"]}\n */\nRemote.prototype.rm = async function rm ({ timeout, signal, headers, ...query }) {\n  await this.client.post('pin/remote/rm', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery({\n      ...query,\n      all: false\n    })\n  })\n}\n\n/**\n * @type {RemotePiningAPI[\"rmAll\"]}\n */\nRemote.prototype.rmAll = async function ({ timeout, signal, headers, ...query }) {\n  await this.client.post('pin/remote/rm', {\n    timeout,\n    signal,\n    headers,\n    searchParams: encodeQuery({\n      ...query,\n      all: true\n    })\n  })\n}\n\n/**\n * @param {Object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nconst decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nconst encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nconst encodeCID = (cid) => {\n  if (cid instanceof CID) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nconst encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nconst encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n\nmodule.exports = Remote\n"]},"metadata":{},"sourceType":"script"}